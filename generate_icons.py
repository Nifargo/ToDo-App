#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —ñ–∫–æ–Ω–æ–∫ –¥–ª—è PWA ToDo –¥–æ–¥–∞—Ç–∫—É
–°—Ç–≤–æ—Ä—é—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —ñ–∫–æ–Ω–∫–∏ –¥–ª—è iOS —Ç–∞ Android
"""

from PIL import Image, ImageDraw, ImageFont
import os

# –†–æ–∑–º—ñ—Ä–∏ —ñ–∫–æ–Ω–æ–∫
SIZES = [72, 96, 128, 144, 152, 167, 180, 192, 512]

# –ö–æ–ª—å–æ—Ä–∏
PRIMARY_COLOR = (99, 102, 241)  # #6366f1
SECONDARY_COLOR = (139, 92, 246)  # #8b5cf6

def create_icon(size):
    """–°—Ç–≤–æ—Ä—é—î —ñ–∫–æ–Ω–∫—É –∑–∞–¥–∞–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É"""
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–æ–º
    image = Image.new('RGB', (size, size), PRIMARY_COLOR)
    draw = ImageDraw.Draw(image)

    # –ú–∞–ª—é—î–º–æ –≥—Ä–∞–¥—ñ—î–Ω—Ç
    for y in range(size):
        ratio = y / size
        r = int(PRIMARY_COLOR[0] + (SECONDARY_COLOR[0] - PRIMARY_COLOR[0]) * ratio)
        g = int(PRIMARY_COLOR[1] + (SECONDARY_COLOR[1] - PRIMARY_COLOR[1]) * ratio)
        b = int(PRIMARY_COLOR[2] + (SECONDARY_COLOR[2] - PRIMARY_COLOR[2]) * ratio)
        draw.line([(0, y), (size, y)], fill=(r, g, b))

    # –ú–∞–ª—é—î–º–æ –≥–∞–ª–æ—á–∫—É
    line_width = max(2, size // 20)
    check_points = [
        (size * 0.25, size * 0.5),
        (size * 0.4, size * 0.65),
        (size * 0.75, size * 0.35)
    ]

    # –¢–æ–≤—Å—Ç–∞ –±—ñ–ª–∞ –≥–∞–ª–æ—á–∫–∞
    draw.line([check_points[0], check_points[1]], fill='white', width=line_width)
    draw.line([check_points[1], check_points[2]], fill='white', width=line_width)

    # –û–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –±—ñ–ª—å—à–∏—Ö —ñ–∫–æ–Ω–æ–∫)
    if size >= 192:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∫—É –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—Ö –∫—É—Ç—ñ–≤
        mask = Image.new('L', (size, size), 0)
        mask_draw = ImageDraw.Draw(mask)
        radius = size // 5
        mask_draw.rounded_rectangle([(0, 0), (size, size)], radius=radius, fill=255)

        # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –º–∞—Å–∫—É
        rounded = Image.new('RGB', (size, size), (255, 255, 255))
        rounded.paste(image, (0, 0))
        image = rounded

    return image

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É icons —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
    icons_dir = 'icons'
    if not os.path.exists(icons_dir):
        os.makedirs(icons_dir)

    print("üé® –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ–∫–æ–Ω–æ–∫ –¥–ª—è PWA...")
    print("=" * 50)

    # –ì–µ–Ω–µ—Ä—É—î–º–æ —ñ–∫–æ–Ω–∫–∏ –≤—Å—ñ—Ö —Ä–æ–∑–º—ñ—Ä—ñ–≤
    for size in SIZES:
        icon = create_icon(size)
        filename = f'{icons_dir}/icon-{size}.png'
        icon.save(filename, 'PNG')
        print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ: {filename} ({size}x{size})")

    print("=" * 50)
    print(f"üéâ –£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ {len(SIZES)} —ñ–∫–æ–Ω–æ–∫!")
    print(f"üìÅ –í—Å—ñ —ñ–∫–æ–Ω–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ø–∞–ø—Ü—ñ: {icons_dir}/")
    print("\nüì± –¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫:")
    print("   ./start-server.sh")
    print("   –∞–±–æ")
    print("   python3 -m http.server 8000")

if __name__ == '__main__':
    try:
        main()
    except ImportError:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ü–æ—Ç—Ä—ñ–±–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ Pillow")
        print("\n–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —ó—ó –∫–æ–º–∞–Ω–¥–æ—é:")
        print("   pip3 install Pillow")
        print("\n–ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ generate-icons.html –≤ –±—Ä–∞—É–∑–µ—Ä—ñ")